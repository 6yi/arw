// Code generated by "stringer -type=IFDtag"; DO NOT EDIT.

package arw

import "fmt"

const _IFDtag_name = "NewSubFileTypeImageWidthImageHeightBitsPerSampleCompressionPhotometricInterpretationImageDescriptionMakeModelStripOffsetsOrientationSamplesPerPixelRowsPerStripStripByteCountsXResolutionYResolutionPlanarConfigurationResolutionUnitSoftwareDateTimeSubIFDsJPEGInterchangeFormatJPEGInterchangeFormatLengthYCbCrPositioningShotInfoSonyRawFileTypeCFARepeatPatternDimCFAPattern2ExposureTimeFNumberExifTagExposureProgramSpectralSensitivityGPSTagISOSpeedRatingsOECFSensitivityTypeRecommendedExposureIndexExifVersionDateTimeOriginalDateTimeDigitizedComponentsConfigurationCompressedBitsPerPixelShutterSpeedValueApertureValueBrightnessValueExposureBiasValueMaxApertureValueSubjectDistanceMeteringModeLightSourceFlashFocalLengthSubjectAreaMakerNoteUserCommentSubsecTimeSubsecTimeOriginalSubsecTimeDigitizedTag9400FlashpixVersionColorSpacePixelXDimensionPixelYDimensionRelatedSoundFileInteroperabilityTagFlashEnergySpatialFrequencyResponseFocalPlaneXResolutionFocalPlaneYResolutionFocalPlaneResolutionUnitSubjectLocationExposureIndexSensingMethodFileSourceSceneTypeCFAPatternCustomRenderedExposureModeWhiteBalanceDigitalZoomRatioFocalLengthIn35mmFilmSceneCaptureTypeGainControlContrastSaturationSharpnessDeviceSettingDescriptionSubjectDistanceRangeImageUniqueIDLensSpecificationLensModelFileFormatSonyModelIDCreativeStyleLensSpecFullImageSizePreviewImageSizePrintImageMatchingDNGPrivateData"

var _IFDtag_map = map[IFDtag]string{
	254:   _IFDtag_name[0:14],
	256:   _IFDtag_name[14:24],
	257:   _IFDtag_name[24:35],
	258:   _IFDtag_name[35:48],
	259:   _IFDtag_name[48:59],
	262:   _IFDtag_name[59:84],
	270:   _IFDtag_name[84:100],
	271:   _IFDtag_name[100:104],
	272:   _IFDtag_name[104:109],
	273:   _IFDtag_name[109:121],
	274:   _IFDtag_name[121:132],
	277:   _IFDtag_name[132:147],
	278:   _IFDtag_name[147:159],
	279:   _IFDtag_name[159:174],
	282:   _IFDtag_name[174:185],
	283:   _IFDtag_name[185:196],
	284:   _IFDtag_name[196:215],
	296:   _IFDtag_name[215:229],
	305:   _IFDtag_name[229:237],
	306:   _IFDtag_name[237:245],
	330:   _IFDtag_name[245:252],
	513:   _IFDtag_name[252:273],
	514:   _IFDtag_name[273:300],
	531:   _IFDtag_name[300:316],
	12288: _IFDtag_name[316:324],
	28672: _IFDtag_name[324:339],
	33421: _IFDtag_name[339:358],
	33422: _IFDtag_name[358:369],
	33434: _IFDtag_name[369:381],
	33437: _IFDtag_name[381:388],
	34665: _IFDtag_name[388:395],
	34850: _IFDtag_name[395:410],
	34852: _IFDtag_name[410:429],
	34853: _IFDtag_name[429:435],
	34855: _IFDtag_name[435:450],
	34856: _IFDtag_name[450:454],
	34864: _IFDtag_name[454:469],
	34866: _IFDtag_name[469:493],
	36864: _IFDtag_name[493:504],
	36867: _IFDtag_name[504:520],
	36868: _IFDtag_name[520:537],
	37121: _IFDtag_name[537:560],
	37122: _IFDtag_name[560:582],
	37377: _IFDtag_name[582:599],
	37378: _IFDtag_name[599:612],
	37379: _IFDtag_name[612:627],
	37380: _IFDtag_name[627:644],
	37381: _IFDtag_name[644:660],
	37382: _IFDtag_name[660:675],
	37383: _IFDtag_name[675:687],
	37384: _IFDtag_name[687:698],
	37385: _IFDtag_name[698:703],
	37386: _IFDtag_name[703:714],
	37396: _IFDtag_name[714:725],
	37500: _IFDtag_name[725:734],
	37510: _IFDtag_name[734:745],
	37520: _IFDtag_name[745:755],
	37521: _IFDtag_name[755:773],
	37522: _IFDtag_name[773:792],
	37888: _IFDtag_name[792:799],
	40960: _IFDtag_name[799:814],
	40961: _IFDtag_name[814:824],
	40962: _IFDtag_name[824:839],
	40963: _IFDtag_name[839:854],
	40964: _IFDtag_name[854:870],
	40965: _IFDtag_name[870:889],
	41483: _IFDtag_name[889:900],
	41484: _IFDtag_name[900:924],
	41486: _IFDtag_name[924:945],
	41487: _IFDtag_name[945:966],
	41488: _IFDtag_name[966:990],
	41492: _IFDtag_name[990:1005],
	41493: _IFDtag_name[1005:1018],
	41495: _IFDtag_name[1018:1031],
	41728: _IFDtag_name[1031:1041],
	41729: _IFDtag_name[1041:1050],
	41730: _IFDtag_name[1050:1060],
	41985: _IFDtag_name[1060:1074],
	41986: _IFDtag_name[1074:1086],
	41987: _IFDtag_name[1086:1098],
	41988: _IFDtag_name[1098:1114],
	41989: _IFDtag_name[1114:1135],
	41990: _IFDtag_name[1135:1151],
	41991: _IFDtag_name[1151:1162],
	41992: _IFDtag_name[1162:1170],
	41993: _IFDtag_name[1170:1180],
	41994: _IFDtag_name[1180:1189],
	41995: _IFDtag_name[1189:1213],
	41996: _IFDtag_name[1213:1233],
	42016: _IFDtag_name[1233:1246],
	42034: _IFDtag_name[1246:1263],
	42036: _IFDtag_name[1263:1272],
	45056: _IFDtag_name[1272:1282],
	45057: _IFDtag_name[1282:1293],
	45088: _IFDtag_name[1293:1306],
	45098: _IFDtag_name[1306:1314],
	45099: _IFDtag_name[1314:1327],
	45100: _IFDtag_name[1327:1343],
	50341: _IFDtag_name[1343:1361],
	50740: _IFDtag_name[1361:1375],
}

func (i IFDtag) String() string {
	if str, ok := _IFDtag_map[i]; ok {
		return str
	}
	return fmt.Sprintf("IFDtag(%d)", i)
}
